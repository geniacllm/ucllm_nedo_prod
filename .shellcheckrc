disable=SC2034 # Unused variables

# ここから下はできるだけenableにしたほうがいいが、一旦disableにしておく

# 意味: $を使って算術式を囲む必要はありません。
# 解決方法: $((expr))の形式を使い、変数の前の$を省略します。例: echo $((var + 1))。
disable=SC2004

# 意味: $(...)や｀｀でコマンドを実行し、その出力を無視すること。
# 解決方法: 出力が不要ならコマンドを直接実行し、必要なら変数に格納します。
disable=SC2091

# 意味: 引用符なしで変数を展開すると、意図しない単語やパス名の分割が発生することがあります。
# 解決方法: 変数展開をダブルクォートで囲むことで、分割やパターン展開を防ぎます。
disable=SC2046

# 意味: 外部ファイルをソースにしているが、そのファイルを見つけることができない。
# 解決方法: ソースファイルの正確なパスを指定するか、そのパスがシェルによって見つけられるようにします。
disable=SC1090

# 意味: readコマンド使用時に、バックスラッシュを読み取るのに問題がある可能性があります。
# 解決方法: readに-rオプションを使用して、バックスラッシュを特別扱いしないようにします。
disable=SC2162

# 意味: テストコマンド内で否定的な条件を使う代わりに、肯定的な条件を使うべきです。
# 解決方法: !を使用した否定条件を避け、代わりに肯定的な条件を使います。例えば、if ! [ -x "$file" ]の代わりにif [ ! -x "$file" ]を使用します。
disable=SC2236

# 意味: 複数のコマンドが同じファイルにリダイレクトされています。
# 解決方法: >や>>を使って複数回リダイレクトする代わりに、グループコマンドやサブシェルを使って一度だけリダイレクトします。例: { cmd1; cmd2; } >file。
disable=SC2129
